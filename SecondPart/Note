PRECEDENTS OF SELECTORS
---------------------------
Execution of CSS code happens line by line from top to buttom .

- You will notice the (ul>li) has different property values, the new one will over write the previous one
- You will notice (li) which is a child element has yellow color, but tat wont take effect. The (ul>li) green will over-write the
   two because (ul>li> is specific and based on precedence .

<style>
        h1, h2{
            color: green;
        }

         ul li{
             color: red;
         }

          ul li{
            color: green;
          }

          li{
             color: yellow;
          }
 </style>


 <body>
     <h1>Heading 1</h1>
     <h2>Heading 2</h2>


     <ul>
         <li>HTML 5</li>
         <li>CCS 3</li>
     </ul>
 </body>

 *8***********************************************************************************************************************

1. Selecting element using class attribute has the higher precedence than selecting them using element names.
2. ID element works with multiple elements simultaneously but in a real-world it is recommended to use ID attribute with one element and Class attributes with several elements
3. ID attributes has the highest precedence than any other selector
4.Styling using Class attributes has higher precedence than styling using elements names
5.Styling element with parent element has higher precedence than styling with element name
6.ID selector has highest precedence than all of them (element name and class selector)

Note: that the below example the ID has highest precedence than the class selector so in styling the ID selector will over write that of class.
EXAMPLE: <ul>
           <li id='list-item' class='item'>HTML</li>
           <li id='list-item' class='item'></li>
       </ul>



EXAMPLE 2:
----------
1. If we want to use same styles for both input elements we can either ,assign to them same class ,and select them and style
2.  Or we can use input tag name
3. If we want to  style for one of the input then we can use ID or CLASS attributes and style
4.Or we use TYPE ATTRIBUTES , input[type="email"] {background-color: orange},

    <input type="text">

    <input type="email">

*************************************************************************************************************************************************************************

CSS COMBINATORS:
-----------------
They defines the relationship between selectors .There are four different types of COMBINATORS
A. Decedent selector, which is expressed by SPACE
Matches all decendent elements of specified elements

EXAMPLE:
------
<section>
      <p> Paragraph 1 </p>
      <h1>Heading</h1>
      <p>Paragraph 2</p>
      <p>Paragraph 3 </p>

      <div>
        <p>Nested Paragraph </p>
       </div>

       <p> Paragraph 4 </p>
       <p> Paragraph 5 </p>
</section>

1. Above , we have html section elements ,with paragraph with padding inside sectional element ,and we have divider, inside the section which wraps another paragraph.
2.In case of this combinator, if we use the ff style

section p{

     background-color: red;
}

In case of combinator if we use the style above the background color will apply the entire p-element, including the NESTED Paragraph in the div.

B. Child Combinators -
   This is expressed using the greater tgan sign (>). Child combinators select all immediate children of specified elements
- If we using child selector for the below example ,background color will be changed for all p-elements except for ,NESTED-PARAGRAPH ,
   because it is not immediate child of section element

   EXAMPLE
   -------------

   section > p{

        background-color: red;
   }


<section>
      <p> Paragraph 1 </p>
      <h1>Heading</h1>
      <p>Paragraph 2</p>
      <p>Paragraph 3 </p>

      <div>
        <p>Nested Paragraph </p>
       </div>

       <p> Paragraph 4 </p>
       <p> Paragraph 5 </p>
</section>

C. ADJACENT SIBLING (+)
----------------------
This is expressed using the plus (+) sign and it select immediately following siblings or specified elements
It means elements should be placed on same level of the HTML TREE and they should have same power as well


EXAMPLE
--------

        h1 + p{

            background-color: yellow;
        }

<section>
      <p> Paragraph 1 </p>
      <h1>Heading</h1>
      <p>Paragraph 2</p>
      <p>Paragraph 3 </p>

      <div>
        <p>Nested Paragraph </p>
       </div>

       <p> Paragraph 4 </p>
       <p> Paragraph 5 </p>
</section>


C: General Sibling Selector (~)
    This is expressed by the tilda sign. and it selects all siblins placed after specified element

     - the background will be changed for all paragraphs which is placed after heading element,except for NESTED Paragraph

   EXAMPLE
   -------


        h1 ~ p{

            background-color: yellow;
        }


   <section>
         <p> Paragraph 1 </p>
         <h1>Heading</h1>
         <p>Paragraph 2</p>
         <p>Paragraph 3 </p>

         <div>
           <p>Nested Paragraph </p>
          </div>

          <p> Paragraph 4 </p>
          <p> Paragraph 5 </p>
   </section>